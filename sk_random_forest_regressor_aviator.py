# coding=utf-8
# @Time : 2023/2/23 上午11:27
# @File : sk_random_forest_regressor.py
import random
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import accuracy_score

# 历史点数
# history = [[3, 1, 1], [6, 5, 2], [4, 4, 4], [6, 3, 1], [6, 2, 1], [5, 3, 2], [5, 4, 3], [6, 4, 3], [6, 4, 2], [5, 3, 2],
#            [5, 4, 1], [5, 3, 1], [3, 2, 1], [6, 5, 4], [4, 4, 2], [6, 5, 4], [3, 3, 1], [5, 2, 1], [6, 6, 3], [6, 4, 3],
#            [4, 3, 3], [6, 4, 4], [2, 2, 1], [6, 5, 1], [4, 2, 2], [5, 2, 1], [2, 2, 1], [6, 3, 1], [4, 3, 1], [6, 2, 1],
#            [4, 4, 1], [5, 1, 1], [6, 5, 3], [5, 2, 1], [6, 6, 4], [4, 3, 3], [3, 2, 2], [5, 5, 2], [6, 6, 2], [6, 3, 2],
#            [3, 2, 2], [6, 5, 2], [4, 3, 2], [2, 1, 1], [5, 3, 2], [5, 3, 2], [3, 2, 2], [2, 2, 1], [5, 3, 2], [6, 5, 4],
#            [6, 4, 4], [6, 3, 1], [4, 3, 2], [6, 4, 2], [6, 4, 4], [4, 4, 3], [5, 5, 5], [4, 3, 1], [2, 2, 2], [5, 4, 3],
#            [6, 1, 1], [5, 2, 2], [2, 1, 1], [4, 2, 2], [6, 5, 1], [5, 4, 1], [6, 6, 1], [3, 5, 1], [6, 4, 2], [6, 4, 3],
#            [6, 4, 2], [4, 3, 1], [6, 3, 1], [5, 4, 1], [5, 2, 1], [4, 2, 2], [6, 6, 3]]
history = [[2.34], [2.2], [1.55], [1.48], [3.86], [1.25], [2.85], [2.57], [1.54], [1.73], [6.11], [1.23], [1.23],
           [1.14], [1.99], [1.23], [1.23], [1.15], [17.08], [3.16], [1.32], [1.13], [1.14], [3.14], [1.00], [1.26],
           [1.04], [2.79], [3.40], [4.80], [2.16], [1.00], [1.30], [7.93], [5.10], [1.42], [8.97], [1.07], [1.67],
           [2.64], [9.74], [10.29], [1.56], [402.85], [1.88], [2.06], [3.38], [10.93], [2.89], [9.79], [1.15], [1.29],
           [100.97], [1.74], [2.69], [6.16], [1.00], [4.95], [1.61], [1.00], [1.41], [1.70], [1.90], [1.96]
           ]
history = [x for x in history if x[0] <=2.0]
# 特征工程：将历史点数转换为特征
X = []
y = []
for i in range(len(history) - 1):
    X.append(history[i])
    y.append(history[i + 1])

# 训练随机森林模型
model = RandomForestRegressor(n_estimators=1000, random_state=64)
model.fit(X, y)

# 预测下一次点数
last_roll = history[-1]
predicted_roll = model.predict([last_roll])
print(predicted_roll)
# print("下一次掷3个骰子的点数预测为：", [int(x) for x in predicted_roll[0]])
# print("total：", sum([int(x) for x in predicted_roll[0]]))
